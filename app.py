import streamlit as st
import pandas as pd
import plotly.express as px
from src.data_processing import load_data, filter_data, compute_brand_share, compute_trends

st.set_page_config(page_title="Laptop Trends 2025", layout="centered")

st.title("üíª Laptop Trends 2025")
st.markdown("–Ü–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∏–π –∞–Ω–∞–ª—ñ–∑ –º–æ–¥–µ–ª–µ–π –Ω–æ—É—Ç–±—É–∫—ñ–≤: —Ü—ñ–Ω–∏, –∞–≤—Ç–æ–Ω–æ–º–Ω—ñ—Å—Ç—å, OLED, AI-–ø—Ä–æ—Ü–µ—Å–æ—Ä–∏")

# --- –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö ---
DATA_PATH = "data/sample_laptops.csv"
df = load_data(DATA_PATH)

if df.empty:
    st.error("‚ùå –î–∞–Ω—ñ –Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω—ñ –∞–±–æ CSV-—Ñ–∞–π–ª –ø–æ—Ä–æ–∂–Ω—ñ–π.")
    st.stop()

# --- –ë–æ–∫–æ–≤–∞ –ø–∞–Ω–µ–ª—å: —Ñ—ñ–ª—å—Ç—Ä–∏ ---
with st.sidebar:
    st.header("üîç –§—ñ–ª—å—Ç—Ä–∏")
    brands = st.multiselect("–ë—Ä–µ–Ω–¥", options=sorted(df['brand'].unique()), default=sorted(df['brand'].unique())[:5])
    price_min, price_max = st.slider("–¶—ñ–Ω–∞ (USD)", int(df['price_usd'].min()), int(df['price_usd'].max()), (int(df['price_usd'].min()), int(df['price_usd'].max())))
    screen_min, screen_max = st.slider("–î—ñ–∞–≥–æ–Ω–∞–ª—å –µ–∫—Ä–∞–Ω—É (in)", float(df['screen_size_in'].min()), float(df['screen_size_in'].max()), (float(df['screen_size_in'].min()), float(df['screen_size_in'].max())))
    ai_cpu = st.selectbox("AI CPU", options=["–£—Å—ñ", "–Ü–∑ AI", "–ë–µ–∑ AI"])

# --- –§—ñ–ª—å—Ç—Ä–∞—Ü—ñ—è ---
filtered = filter_data(df, brands=brands, price_range=(price_min, price_max), screen_range=(screen_min, screen_max), ai_cpu=ai_cpu)

# --- –ú–µ—Ç—Ä–∏–∫–∏ ---
st.markdown("### üìä –ó–∞–≥–∞–ª—å–Ω—ñ –º–µ—Ç—Ä–∏–∫–∏")
col1, col2, col3 = st.columns(3)
col1.metric("–ú–æ–¥–µ–ª–µ–π (–≤—ñ–¥—Ñ—ñ–ª—å—Ç—Ä–æ–≤–∞–Ω–æ)", len(filtered))
col2.metric("–°–µ—Ä–µ–¥–Ω—è —Ü—ñ–Ω–∞ (USD)", f"{filtered['price_usd'].mean():.0f}")
col3.metric("–°–µ—Ä–µ–¥–Ω—è –∞–≤—Ç–æ–Ω–æ–º–Ω—ñ—Å—Ç—å (Wh)", f"{filtered['battery_wh'].mean():.0f}")

# --- –í–∫–ª–∞–¥–∫–∏ ---
tab1, tab2, tab3 = st.tabs(["üìã –¢–∞–±–ª–∏—Ü—è", "ü•ß –ß–∞—Å—Ç–∫–∞ –±—Ä–µ–Ω–¥—ñ–≤", "üìà –¢—Ä–µ–Ω–¥–∏"])

with tab1:
    st.dataframe(filtered.sort_values(by='price_usd').reset_index(drop=True), use_container_width=True)

with tab2:
    brand_share = compute_brand_share(filtered)
    fig1 = px.pie(brand_share, names='brand', values='count', title='–†–æ–∑–ø–æ–¥—ñ–ª –∑–∞ –±—Ä–µ–Ω–¥–∞–º–∏', template='plotly_dark')
    st.plotly_chart(fig1, use_container_width=True)

with tab3:
    trend_df = compute_trends(df)
    if trend_df.empty:
        st.warning("–ù–µ–º–∞—î –¥–∞–Ω–∏—Ö –¥–ª—è –ø–æ–±—É–¥–æ–≤–∏ —Ç—Ä–µ–Ω–¥—ñ–≤.")
    else:
        fig2 = px.line(
            trend_df,
            x='year',
            y='value',
            color='metric',
            markers=True,
            line_shape='spline',
            template='plotly_dark',
            title='–¢—Ä–µ–Ω–¥–∏: —Ü—ñ–Ω–∞, –∞–≤—Ç–æ–Ω–æ–º–Ω—ñ—Å—Ç—å, OLED'
        )
        fig2.update_layout(
            legend_title_text='–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞',
            xaxis_title='–†—ñ–∫',
            yaxis_title='–ó–Ω–∞—á–µ–Ω–Ω—è',
            margin=dict(l=40, r=40, t=60, b=40)
        )
        st.plotly_chart(fig2, use_container_width=True)

# --- –ï–∫—Å–ø–æ—Ä—Ç CSV ---
st.markdown("### üì§ –ï–∫—Å–ø–æ—Ä—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤")
st.download_button(
    "‚¨áÔ∏è –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –≤—ñ–¥—Ñ—ñ–ª—å—Ç—Ä–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ —É CSV",
    data=filtered.to_csv(index=False).encode('utf-8'),
    file_name="filtered_laptops.csv",
    mime="text/csv"
)
